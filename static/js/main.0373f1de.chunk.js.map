{"version":3,"sources":["ui/book-list/BookList.module.scss","ui/reusable-components/input/Input.module.css","ui/book-card/BookCard.module.scss","ui/reusable-components/button/Button.module.css","ui/reusable-components/select/Select.module.css","ui/book-list/book/Book.module.scss","ui/App.module.scss","ui/reusable-components/preloader/Preloader.module.css","ui/reusable-components/input/img/search.svg","ui/reusable-components/input/Input.tsx","ui/reusable-components/button/Button.tsx","ui/reusable-components/select/Select.tsx","bll/utils/error-utils.ts","dal/api/api.ts","bll/pageReducer.ts","bll/utils/helper-function.ts","bll/appReducer.ts","ui/router/routes.ts","ui/book-list/selectors.ts","ui/search-form/SearchForm.tsx","ui/reusable-components/preloader/Preloader.tsx","ui/common/assets/img/book.png","ui/book-list/book/Book.tsx","ui/book-list/BookList.tsx","ui/constants/constants.ts","ui/book-card/selectors.ts","ui/book-card/BookCard.tsx","ui/App.tsx","bll/store.ts","index.tsx","ui/search-form/SearchForm.module.scss"],"names":["module","exports","Input","React","memo","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","default","e","currentTarget","value","key","style","backgroundImage","searchIcon","Button","finalClassName","Select","options","name","onChangeOption","mappedOptions","map","a","i","option","handleNetworkAppError","dispatch","setAppErrorAC","message","setAppStatusAC","instance","axios","create","baseURL","API","query","categories","sortBy","index","get","process","initialState","totalResult","startIndex","setTotalResultAC","filterById","array","propertyName","occurrences","filter","x","property","status","books","currentBook","queryTerm","setBooksAC","setNewBooksAC","setQueryTermAC","term","fetchBooksTC","search","getState","prevSearch","app","prevCategories","prevSortBy","res","data","totalItems","items","statusText","routes","selectBooks","state","selectStatus","selectError","selectQueryTerm","selectPageInfo","page","SearchForm","useDispatch","navigate","useNavigate","useSelector","formRef","useRef","wrap","bcgImage","ref","form","onSubmit","preventDefault","elements","trim","length","alert","current","reset","title","inputGroup","placeholder","input","disabled","btn","selectGroup","Preloader","ldsDualRing","Book","item","id","imageLinks","authors","book","onClick","setCurrentBookAC","alignSelf","to","src","thumbnail","bookImg","alt","description","slice","join","BookList","count","bookList","volumeInfo","loadWrap","marginTop","selectBook","BookCard","img","App","container","path","element","rootReducer","combineReducers","action","newState","uniqueNewState","store","createStore","applyMiddleware","ReduxThunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0373f1de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"BookList_wrap__1LGE6\",\"loadWrap\":\"BookList_loadWrap__2R5nf\",\"count\":\"BookList_count__2J4h0\",\"bookList\":\"BookList_bookList__245dp\",\"btn\":\"BookList_btn__1T6ea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Input_default__21bcX\",\"errorInput\":\"Input_errorInput__2veyf\",\"error\":\"Input_error__i0LCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"BookCard_wrap__cIVVU\",\"book\":\"BookCard_book__1wv7P\",\"img\":\"BookCard_img__3ZBTN\",\"description\":\"BookCard_description__CPFad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__3A_gB\",\"error\":\"Button_error__3a1c0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Select_default__2PWyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"book\":\"Book_book__G1VRf\",\"description\":\"Book_description__1kddn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1pgGd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Preloader_ldsDualRing__1fj7a\"};","export default __webpack_public_path__ + \"static/media/search.66b79e13.svg\";","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react';\nimport s from './Input.module.css';\nimport searchIcon from './img/search.svg';\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\ntype InputPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void;\n    onEnter?: () => void;\n    error?: string;\n    spanClassName?: string;\n};\n\nconst Input = React.memo(({\n    type,\n    onChange,\n    onChangeText,\n    onKeyPress,\n    onEnter,\n    error,\n    className,\n    spanClassName,\n    ...restProps\n}:InputPropsType) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    };\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter && e.key === 'Enter' && onEnter();\n    };\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\n    const finalInputClassName = error\n        ? `${s.errorInput}  ${s.default} ${className ? className : ''}`\n        : `${s.default} ${className ? className : ''}`;\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                style={{ backgroundImage: `url(${searchIcon})` }}\n                {...restProps}\n            />\n            {error && <div className={finalSpanClassName}>{error}</div>}\n        </>\n    );\n});\n\nexport default Input;\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\nimport s from './Button.module.css';\n\ntype DefaultButtonPropsType = DetailedHTMLProps<\n    ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    error?: boolean;\n};\n\nconst Button = React.memo(({ error, className, ...restProps }:SuperButtonPropsType) => {\n    const finalClassName = `${error ? s.error + ' ' + s.default : s.default} ${className}`;\n\n    return <button className={finalClassName} {...restProps} />;\n});\n\nexport default Button;\n","import React, { SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent } from 'react';\nimport s from './Select.module.css';\n\ntype DefaultSelectPropsType = DetailedHTMLProps<\n    SelectHTMLAttributes<HTMLSelectElement>,\n    HTMLSelectElement\n>;\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[];\n    onChangeOption?: (option: any) => void;\n    name?: string;\n};\n\nconst Select = React.memo(({\n    options,\n    name,\n    className,\n    onChange,\n    onChangeOption,\n    ...restProps\n}:SuperSelectPropsType) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value);\n        onChange && onChange(e);\n    };\n\n    const mappedOptions: any[] = options\n        ? options.map((a, i) => (\n              <option className={s.option} value={a} key={i + '' + a}>\n                  {a}\n              </option>\n          ))\n        : [];\n\n    const finalClassName = `${s.default} ${className}`;\n\n    return (\n        <select name={name} className={finalClassName} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n});\n\nexport default Select;\n","import { Dispatch } from 'redux';\nimport { AppActionType, setAppErrorAC, setAppStatusAC } from '../appReducer';\n\nexport const handleNetworkAppError = (error:{message:string} , dispatch: Dispatch<AppActionType>) => {\n  dispatch(setAppErrorAC(error.message ? error.message : 'Some error occurred'))\n  dispatch(setAppStatusAC('failed'))\n}\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://www.googleapis.com/books/v1/',\n});\nconst key = process.env.REACT_APP_API_KEY\nexport const API = {\n    getBooks(query:string, categories:string,sortBy:string,index:number) {\n        return instance.get(\n            `volumes?q=${query}+${categories}&orderBy=${sortBy}&maxResults=30&startIndex=${index}&${key}`,\n        );\n    },\n};\n","import { AppRootActionType } from './store';\nimport { PageStateType } from './types/page-types';\n\n\nconst initialState = {\n    totalResult: 0,\n    startIndex: 30,\n};\nexport const pageReducer = (state: PageStateType = initialState, action: AppRootActionType): typeof initialState => {\n    switch (action.type) {\n        case 'PAGE/SET-TOTAL-ITEMS':\n            return { ...state, totalResult: action.totalResult };\n        case 'PAGE/SET-START-SEARCH-INDEX':\n            return { ...state, startIndex: (state.startIndex += action.index) };\n        default:\n            return state;\n    }\n};\n\n//actions\nexport type PageActionType = ReturnType<typeof setTotalResultAC> | ReturnType<typeof setStartSearchIndexAC>;\n\nexport const setTotalResultAC = (totalResult: number) => ({ type: 'PAGE/SET-TOTAL-ITEMS', totalResult } as const);\nexport const setStartSearchIndexAC = (index: number) => ({ type: 'PAGE/SET-START-SEARCH-INDEX', index } as const);\n","import { BookType } from '../types/app-types';\r\n\r\ntype FilterType = 'id'\r\nexport const filterById = function(array:BookType[], propertyName:FilterType) {\r\n    let occurrences:{[key:string]:boolean} = {}\r\n\r\n    return array.filter((x) => {\r\n        let property = x[propertyName]\r\n        if (occurrences[property]) {\r\n            return false;\r\n        }\r\n        occurrences[property] = true;\r\n        return true;\r\n    })\r\n}\r\n","import { Dispatch } from 'redux';\nimport { handleNetworkAppError } from './utils/error-utils';\nimport { API } from '../dal/api/api';\nimport { setTotalResultAC } from './pageReducer';\nimport { AppRootActionType, AppRootStateType } from './store';\nimport { RequestStatusType, AppStateType, QueryTermType, BookType } from './types/app-types';\nimport { Nullable } from './types/Nullable';\nimport { filterById } from './utils/helper-function';\n\nconst initialState = {\n   status: 'idle' as RequestStatusType,\n   books: [] as BookType[],\n   error: null as Nullable<string>,\n   currentBook: [] as BookType[],\n   queryTerm: {} as QueryTermType,\n};\n\nexport const appReducer = (state: AppStateType = initialState, action: AppActionType): typeof initialState => {\n   switch (action.type) {\n      case 'APP/SET-BOOKS':\n         const newState = [...state.books, ...action.books];\n         const uniqueNewState = filterById(newState, 'id');\n         return { ...state, books: uniqueNewState };\n      case 'APP/SET-NEW-BOOKS': {\n         const newState = [...action.books];\n         const uniqueNewState = filterById(newState, 'id');\n         return { ...state, books: uniqueNewState };\n      }\n      case 'APP/SET-STATUS':\n         return { ...state, status: action.status };\n      case 'APP/SET-QUERY-TERM':\n         return { ...state, queryTerm: action.term };\n      case 'APP/SET-ERROR':\n         return { ...state, error: action.error };\n      case 'APP/SET-CURRENT-BOOK':\n         return { ...state, currentBook: state.books.filter(i => i.id === action.id) };\n      default:\n         return state;\n   }\n};\n\n//actions\nexport type AppActionType =\n   | ReturnType<typeof setBooksAC>\n   | ReturnType<typeof setAppStatusAC>\n   | ReturnType<typeof setAppErrorAC>\n   | ReturnType<typeof setAppStatusAC>\n   | ReturnType<typeof setCurrentBookAC>\n   | ReturnType<typeof setNewBooksAC>\n   | ReturnType<typeof setQueryTermAC>;\n\nexport const setBooksAC = (books: BookType[]) => ({ type: 'APP/SET-BOOKS', books } as const);\nexport const setNewBooksAC = (books: BookType[]) => ({ type: 'APP/SET-NEW-BOOKS', books } as const);\nexport const setCurrentBookAC = (id: string) => ({ type: 'APP/SET-CURRENT-BOOK', id } as const);\nexport const setAppStatusAC = (status: RequestStatusType) =>\n   ({ type: 'APP/SET-STATUS', status } as const);\nexport const setAppErrorAC = (error: Nullable<string>) => ({ type: 'APP/SET-ERROR', error } as const);\nexport const setQueryTermAC = (term: QueryTermType) => ({ type: 'APP/SET-QUERY-TERM', term } as const);\n\n//thunk\nexport const fetchBooksTC =\n   (search: string, categories: string, sortBy: string, index: number = 0) =>\n   async (dispatch: Dispatch<AppRootActionType>, getState: () => AppRootStateType) => {\n      let prevSearch = getState().app.queryTerm.search;\n      let prevCategories = getState().app.queryTerm.categories;\n      let prevSortBy = getState().app.queryTerm.sortBy;\n\n      dispatch(setAppStatusAC('loading'));\n      dispatch(setQueryTermAC({ search, categories, sortBy }));\n\n      try {\n         const res = await API.getBooks(search, categories, sortBy, index);\n         if (res.status === 200) {\n            dispatch(setTotalResultAC(res.data.totalItems));\n\n            if (prevSearch === search && prevCategories === categories && prevSortBy === sortBy) {\n               dispatch(setBooksAC(res.data.items));\n            } else {\n               dispatch(setNewBooksAC(res.data.items));\n            }\n            dispatch(setAppStatusAC('succeeded'));\n         } else {\n            handleNetworkAppError({ message: res.statusText }, dispatch);\n         }\n      } catch (error) {\n         handleNetworkAppError(error as Error, dispatch);\n      }\n   };\n","\nexport const routes = {\n    bookList: \"/\",\n    bookCard: \"/book-card\"\n}\n","import { AppRootStateType } from '../../bll/store';\nimport { BookType, QueryTermType, RequestStatusType } from '../../bll/types/app-types';\nimport { PageStateType } from '../../bll/types/page-types';\n\nexport const selectBooks = (state: AppRootStateType): BookType[] => state.app.books;\nexport const selectStatus = (state: AppRootStateType):RequestStatusType => state.app.status;\nexport const selectError = (state: AppRootStateType):string | null => state.app.error;\nexport const selectQueryTerm = (state: AppRootStateType):QueryTermType => state.app.queryTerm;\nexport const selectPageInfo = (state: AppRootStateType):PageStateType => state.page;\n\n","import Input from '../reusable-components/input/Input';\nimport s from './SearchForm.module.scss';\nimport Button from '../reusable-components/button/Button';\nimport Select from '../reusable-components/select/Select';\nimport React, { useRef } from 'react';\nimport { fetchBooksTC } from '../../bll/appReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { routes } from '../router/routes';\nimport { selectStatus } from '../book-list/selectors';\n\ninterface FormElements extends HTMLFormControlsCollection {\n   search: HTMLInputElement;\n   categories: HTMLInputElement;\n   sortBy: HTMLInputElement;\n}\n\ninterface FormPropsElement extends HTMLFormElement {\n   readonly elements: FormElements;\n}\n\nexport const SearchForm = () => {\n   const dispatch = useDispatch();\n   const navigate = useNavigate();\n   const status = useSelector(selectStatus);\n   const formRef = useRef<HTMLFormElement>(null);\n\n   const handleSubmit = (e: React.FormEvent<FormPropsElement>) => {\n      e.preventDefault();\n\n      let search = e.currentTarget.elements.search.value;\n      let categories = e.currentTarget.elements.categories.value;\n      let sortBy = e.currentTarget.elements.sortBy.value;\n\n      if (search.trim() === '' || search.length > 20) {\n         alert('Input should be more than 1 character and less then 20');\n         formRef.current && formRef.current.reset();\n      }\n\n      dispatch(fetchBooksTC(search, categories, sortBy));\n\n      navigate(routes.bookList);\n   };\n   const categories = ['all', 'art', 'biography', 'computers', 'history', 'medical', 'poetry'];\n   const sortBy = ['relevance', 'newest'];\n\n   return (\n      <div className={s.wrap}>\n         <div className={s.bcgImage} />\n         <form ref={formRef} className={s.form} onSubmit={handleSubmit}>\n            <span className={s.title}> Online library</span>\n            <div className={s.inputGroup}>\n               <Input placeholder=\"Search\" name=\"search\" className={s.input} />\n               <Button type={'submit'} disabled={status === 'loading'} className={s.btn}>\n                  search\n               </Button>\n            </div>\n\n            <div className={s.selectGroup}>\n               <div>\n                  <span>Categories</span>\n                  <Select options={categories} name=\"categories\" />\n               </div>\n               <div>\n                  <span>Sorting by</span>\n                  <Select options={sortBy} name=\"sortBy\" />\n               </div>\n            </div>\n         </form>\n      </div>\n   );\n};\n","import s from \"./Preloader.module.css\";\r\nimport React from \"react\";\r\n\r\nexport const Preloader = React.memo(() => {\r\n    return <div className={s.ldsDualRing}/>\r\n})\r\n","export default __webpack_public_path__ + \"static/media/book.41aa1e89.png\";","import { setCurrentBookAC } from '../../../bll/appReducer';\nimport { routes } from '../../router/routes';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport s from './Book.module.scss';\nimport bookImg from '../../common/assets/img/book.png';\nimport React from 'react';\nimport { VolumeInfoType } from '../../../bll/types/app-types';\n\ntype BookPropsType = {\n    item: VolumeInfoType;\n    id: string;\n};\nexport const Book = React.memo(({ item, id }: BookPropsType) => {\n    const dispatch = useDispatch();\n    const { imageLinks, title, categories, authors } = item;\n\n    const onNavLinkClick = () => {\n        dispatch(setCurrentBookAC(id));\n    };\n    return (\n        <div className={s.book}>\n            <NavLink onClick={onNavLinkClick} style={{ alignSelf: 'center' }} to={routes.bookCard}>\n                <img src={imageLinks ? imageLinks.thumbnail : bookImg} alt=''/>\n            </NavLink>\n            <div className={s.description}>\n                <div>{categories ? categories[0] : ''}</div>\n                {title && <div>{title.length > 100 ? title.slice(0, 100) + '...' : title}</div>}\n                {authors && <div> {authors.join(', ')}</div>}\n            </div>\n        </div>\n    );\n})\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBooksTC, setAppErrorAC } from '../../bll/appReducer';\nimport s from './BookList.module.scss';\nimport { Preloader } from '../reusable-components/preloader/Preloader';\nimport { Book } from './book/Book';\nimport { setStartSearchIndexAC } from '../../bll/pageReducer';\nimport Button from '../reusable-components/button/Button';\nimport { selectBooks, selectError, selectPageInfo, selectQueryTerm, selectStatus } from './selectors';\nimport { EMPTY_STRING, PAGINATION_STEP } from '../constants/constants';\n\nexport const BookList = () => {\n   const dispatch = useDispatch();\n   const books = useSelector(selectBooks);\n   const status = useSelector(selectStatus);\n   const error = useSelector(selectError);\n   const { totalResult, startIndex } = useSelector(selectPageInfo);\n   const { search, categories, sortBy } = useSelector(selectQueryTerm);\n\n   const onLoadMoreClick = () => {\n      dispatch(fetchBooksTC(search, categories, sortBy, startIndex));\n      dispatch(setStartSearchIndexAC(PAGINATION_STEP));\n   };\n\n   if (error) {\n      alert(error);\n      dispatch(setAppErrorAC(EMPTY_STRING));\n   }\n   return (\n      <div className={s.wrap}>\n         {status === 'loading' && !books.length ? (\n            <div style={{ marginTop: '10vh' }}>\n               <Preloader />\n            </div>\n         ) : (\n            <>\n               {totalResult > 0 && (\n                  <>\n                     <div className={s.count}>Found {totalResult && totalResult} results</div>\n\n                     <div className={s.bookList}>\n                        {books &&\n                           books.map(book => <Book key={book.id} id={book.id} item={book.volumeInfo} />)}\n                     </div>\n                     {totalResult && (\n                        <Button disabled={status === 'loading'} className={s.btn} onClick={onLoadMoreClick}>\n                           Load more\n                        </Button>\n                     )}\n                     {status === 'loading' && (\n                        <div className={s.loadWrap}>\n                           <Preloader />\n                        </div>\n                     )}\n                  </>\n               )}\n            </>\n         )}\n      </div>\n   );\n};\n","export const PAGINATION_STEP = 30\r\nexport const EMPTY_STRING = ''\r\n","import { AppRootStateType } from '../../bll/store';\nimport { BookType } from '../../bll/types/app-types';\n\nexport const selectBook = (state: AppRootStateType): BookType[] => state.app.currentBook;\n","import { useSelector } from 'react-redux';\nimport s from './BookCard.module.scss';\nimport React from 'react';\nimport bookImg from '../common/assets/img/book.png';\nimport { selectBook } from './selectors';\n\nexport const BookCard = () => {\n   const book = useSelector(selectBook);\n   return (\n      <div>\n         {book &&\n            book.map(item => {\n               let value = item.volumeInfo;\n               return (\n                  <div key={item.id} className={s.wrap}>\n                     <div className={s.book}>\n                        <div className={s.img}>\n                           <img\n                              src={value.imageLinks ? value.imageLinks.thumbnail : bookImg}\n                              alt=\"\"\n                           />\n                        </div>\n\n                        <div className={s.description}>\n                           {value.categories && <div>{value.categories}</div>}\n                           <div>{value.title}</div>\n                           <div> {value.authors.join(', ')}</div>\n                           {value.description && <div> {value.description}</div>}\n                        </div>\n                     </div>\n                  </div>\n               );\n            })}\n      </div>\n   );\n};\n","import React from 'react';\nimport s from './App.module.scss';\nimport { SearchForm } from './search-form/SearchForm';\nimport { routes } from './router/routes';\nimport { Route, Routes } from 'react-router-dom';\nimport { BookList } from './book-list/BookList';\nimport { BookCard } from './book-card/BookCard';\n\nfunction App() {\n    return (\n        <div className={s.container}>\n            <SearchForm />\n            <Routes>\n                <Route path={'/*'} element={<BookList />} />\n                <Route path={routes.bookList} element={<BookList />} />\n                <Route path={routes.bookCard} element={<BookCard />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { AppActionType, appReducer } from './appReducer';\nimport { PageActionType, pageReducer } from './pageReducer';\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    page: pageReducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\nexport type AppRootActionType = PageActionType | AppActionType;\n\n// @ts-ignore\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './bll/store';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"SearchForm_wrap__1-Zhq\",\"bcgImage\":\"SearchForm_bcgImage__2yTIM\",\"form\":\"SearchForm_form__3S8V5\",\"title\":\"SearchForm_title__28S27\",\"inputGroup\":\"SearchForm_inputGroup__wHgTY\",\"input\":\"SearchForm_input__5EQqv\",\"btn\":\"SearchForm_btn__vkoJi\",\"selectGroup\":\"SearchForm_selectGroup__Az_nr\"};"],"sourceRoot":""}