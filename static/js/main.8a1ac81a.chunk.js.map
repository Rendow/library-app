{"version":3,"sources":["ui/book-list/BookList.module.scss","ui/common/input/Input.module.css","ui/book-card/BookCard.module.scss","ui/common/button/Button.module.css","ui/common/select/Select.module.css","ui/book-list/book/Book.module.scss","App.module.scss","ui/common/preloader/Preloader.module.css","ui/common/input/img/search.svg","ui/common/input/Input.tsx","ui/common/button/Button.tsx","ui/common/select/Select.tsx","bll/utils/error-utils.ts","dal/api/api.ts","bll/pageReducer.ts","bll/appReducer.ts","ui/router/routes.ts","ui/search-form/SearchForm.tsx","ui/common/preloader/Preloader.tsx","common/assets/img/book.png","ui/book-list/book/Book.tsx","ui/book-list/BookList.tsx","ui/book-card/BookCard.tsx","App.tsx","bll/store.ts","index.tsx","ui/search-form/SearchForm.module.scss"],"names":["module","exports","Input","React","memo","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","default","e","currentTarget","value","key","style","backgroundImage","searchIcon","Button","finalClassName","Select","options","name","onChangeOption","mappedOptions","map","a","i","option","handleNetworkAppError","dispatch","setAppErrorAC","message","setAppStatusAC","instance","axios","create","baseURL","API","query","categories","sortBy","index","get","initialState","totalItems","pageIndex","setTotalItemsAC","status","items","currentBook","queryTerm","setBooksAC","books","setNewBooksAC","setQueryTermAC","term","fetchBooksTC","search","getState","prevSearch","app","prevCategories","prevSortBy","res","data","statusText","routes","SearchForm","useDispatch","navigate","useNavigate","useSelector","state","formRef","useRef","wrap","bcgImage","ref","form","onSubmit","preventDefault","elements","trim","length","alert","current","reset","title","inputGroup","placeholder","input","disabled","btn","selectGroup","Preloader","ldsDualRing","Book","item","id","imageLinks","authors","book","onClick","setCurrentBookAC","alignSelf","to","src","thumbnail","bookImg","alt","description","slice","BookList","page","count","bookList","volumeInfo","loadWrap","marginTop","BookCard","img","App","container","path","element","rootReducer","combineReducers","action","oldState","newState","idList","uniqueNewState","filter","includes","store","createStore","applyMiddleware","ReduxThunk","window","ReactDOM","render","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,MAAQ,wBAAwB,SAAW,2BAA2B,IAAM,wB,mBCAlKD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,WAAa,0BAA0B,MAAQ,uB,mBCAlGD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,IAAM,sBAAsB,YAAc,gC,mBCAxHD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,MAAQ,wB,mBCA5DD,EAAOC,QAAU,CAAC,QAAU,0B,mBCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,UAAY,yB,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,iC,0JCDjB,MAA0B,mC,OCsD1BC,EA1CDC,IAAMC,MAAK,YAUJ,EATjBC,KASkB,IARlBC,EAQiB,EARjBA,SACAC,EAOiB,EAPjBA,aACAC,EAMiB,EANjBA,WACAC,EAKiB,EALjBA,QACAC,EAIiB,EAJjBA,MACAC,EAGiB,EAHjBA,UACAC,EAEiB,EAFjBA,cACGC,EACc,6GAaXC,EAAkB,UAAMC,IAAEL,MAAR,YAAiBE,GAAgC,IACnEI,EAAsBN,EAAK,UACxBK,IAAEE,WADsB,aACPF,IAAEG,QADK,YACMP,GAAwB,IAD9B,UAExBI,IAAEG,QAFsB,YAEXP,GAAwB,IAC9C,OACI,qCACI,mCACIN,KAAM,OACNC,SAnBa,SAACa,GACtBb,GAAYA,EAASa,GAErBZ,GAAgBA,EAAaY,EAAEC,cAAcC,QAiBrCb,WAfe,SAACW,GACxBX,GAAcA,EAAWW,GAEzBV,GAAqB,UAAVU,EAAEG,KAAmBb,KAaxBE,UAAWK,EACXO,MAAO,CAAEC,gBAAgB,OAAD,OAASC,EAAT,OACpBZ,IAEPH,GAAS,qBAAKC,UAAWG,EAAhB,SAAqCJ,U,iCC/B5CgB,EANAvB,IAAMC,MAAK,YAA8D,IAA3DM,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,UAAcE,EAAqC,qCAC7Ec,EAAc,UAAMjB,EAAQK,IAAEL,MAAQ,IAAMK,IAAEG,QAAUH,IAAEG,QAA5C,YAAuDP,GAE3E,OAAO,oCAAQA,UAAWgB,GAAoBd,O,iBC8BnCe,EA/BAzB,IAAMC,MAAK,YAOE,IANxByB,EAMuB,EANvBA,QACAC,EAKuB,EALvBA,KACAnB,EAIuB,EAJvBA,UACAL,EAGuB,EAHvBA,SACAyB,EAEuB,EAFvBA,eACGlB,EACoB,0EAOjBmB,EAAuBH,EACvBA,EAAQI,KAAI,SAACC,EAAGC,GAAJ,OACR,wBAAQxB,UAAWI,IAAEqB,OAAQf,MAAOa,EAApC,SACKA,GADuCC,EAAI,GAAKD,MAIzD,GAEAP,EAAc,UAAMZ,IAAEG,QAAR,YAAmBP,GAEvC,OACI,gDAAQmB,KAAMA,EAAMnB,UAAWgB,EAAgBrB,SAhB1B,SAACa,GACtBY,GAAkBA,EAAeZ,EAAEC,cAAcC,OACjDf,GAAYA,EAASa,KAc0DN,GAA/E,aACKmB,Q,iCCrCAK,EAAwB,SAAC3B,EAAyB4B,GAC7DA,EAASC,EAAc7B,EAAM8B,QAAU9B,EAAM8B,QAAU,wBACvDF,EAASG,EAAe,Y,QCHpBC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,yCAGAC,EAAM,SACNC,EAAcC,EAAkBC,EAAcC,GACnD,OAAOR,EAASS,IAAT,oBAA0BJ,EAA1B,YAAmCC,EAAnC,oBAAyDC,EAAzD,qCAA4FC,EAA5F,kDCDTE,EAAe,CACjBC,WAAY,EACZC,UAAW,IAgBFC,EAAkB,SAACF,GAAD,MAAyB,CAAEhD,KAAM,uBAAwBgD,eCyBlFD,EAAe,CACjBI,OAAQ,OACRC,MAAO,GACP/C,MAAO,KACPgD,YAAa,GACbC,UAAW,IAsCFC,EAAa,SAACC,GAAD,MAAyB,CAAExD,KAAM,gBAAiBwD,UAC/DC,EAAgB,SAACD,GAAD,MAAyB,CAAExD,KAAM,oBAAqBwD,UAEtEpB,EAAiB,SAACe,GAAD,MAAgC,CAAEnD,KAAM,iBAAkBmD,WAC3EjB,EAAgB,SAAC7B,GAAD,MAA2B,CAAEL,KAAM,gBAAiBK,UACpEqD,EAAiB,SAACC,GAAD,MAA0B,CAAE3D,KAAM,qBAAsB2D,SAGzEC,EACT,SAACC,EAAgBlB,EAAoBC,GAArC,IAAqDC,EAArD,uDAAqE,EAArE,8CACA,WAAOZ,EAAuC6B,GAA9C,qBAAAjC,EAAA,6DAEQkC,EAAaD,IAAWE,IAAIV,UAAUO,OACtCI,EAAiBH,IAAWE,IAAIV,UAAUX,WAC1CuB,EAAaJ,IAAWE,IAAIV,UAAUV,OAE1CX,EAASG,EAAe,YACxBH,EAASyB,EAAe,CAAEG,SAAQlB,aAAYC,YAPlD,kBAU0BH,EAAaoB,EAAQlB,EAAYC,EAAQC,GAVnE,OAW2B,OADbsB,EAVd,QAWgBhB,QACJlB,EAASiB,EAAgBiB,EAAIC,KAAKpB,aAG9Bf,EADA8B,IAAeF,GAAUI,IAAmBtB,GAAcuB,IAAetB,EAChEW,EAAWY,EAAIC,KAAKhB,OAEpBK,EAAcU,EAAIC,KAAKhB,QAEpCnB,EAASG,EAAe,gBAExBJ,EAAsB,CAAEG,QAASgC,EAAIE,YAAcpC,GACnDA,EAASG,EAAe,YAtBpC,kDAyBQJ,EAAsB,EAAD,GAAiBC,GACtCA,EAASG,EAAe,WA1BhC,0DADA,yD,cCrGSkC,EACC,IADDA,EAEC,aCkBDC,EAAa,WACtB,IAAMtC,EAAWuC,cACXC,EAAWC,cACXvB,EAASwB,aAAiD,SAAAC,GAAK,OAAIA,EAAMZ,IAAIb,UAC7E0B,EAAUC,iBAAwB,MAqBxC,OACI,sBAAKxE,UAAWI,IAAEqE,KAAlB,UACI,qBAAKzE,UAAWI,IAAEsE,WAClB,uBAAMC,IAAKJ,EAASvE,UAAWI,IAAEwE,KAAMC,SAtB1B,SAACrE,GAClBA,EAAEsE,iBAEF,IAAIvB,EAAS/C,EAAEC,cAAcsE,SAASxB,OAAO7C,MACzC2B,EAAa7B,EAAEC,cAAcsE,SAAS1C,WAAW3B,MACjD4B,EAAS9B,EAAEC,cAAcsE,SAASzC,OAAO5B,OAEvB,KAAlB6C,EAAOyB,QAAiBzB,EAAO0B,OAAS,MACxCC,MAAM,0DACNX,EAAQY,SAAWZ,EAAQY,QAAQC,SAGvCzD,EAAS2B,EAAaC,EAAQlB,EAAYC,IAE1C6B,EAASH,IAQL,UACI,sBAAMhE,UAAWI,IAAEiF,MAAnB,6BACA,sBAAKrF,UAAWI,IAAEkF,WAAlB,UACI,cAAC,EAAD,CAAOC,YAAY,SAASpE,KAAK,SAASnB,UAAWI,IAAEoF,QACvD,cAAC,EAAD,CAAQ9F,KAAM,SAAU+F,SAAqB,YAAX5C,EAAsB7C,UAAWI,IAAEsF,IAArE,uBAKJ,sBAAK1F,UAAWI,IAAEuF,YAAlB,UACI,gCACI,8CACA,cAAC,EAAD,CAAQzE,QAlBT,CAAC,MAAO,MAAO,YAAa,YAAa,UAAW,UAAW,UAkBjCC,KAAK,kBAEtC,gCACI,8CACA,cAAC,EAAD,CAAQD,QArBb,CAAC,YAAa,UAqBgBC,KAAK,wB,kCC9DzCyE,EAAYpG,IAAMC,MAAK,WAChC,OAAO,qBAAKO,UAAWI,IAAEyF,iB,wBCJd,OAA0B,iCCY5BC,GAAOtG,IAAMC,MAAK,YAAkC,IAA/BsG,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,GAC9BrE,EAAWuC,cACT+B,EAA2CF,EAA3CE,WAAYZ,EAA+BU,EAA/BV,MAAOhD,EAAwB0D,EAAxB1D,WAAY6D,EAAYH,EAAZG,QAKvC,OACI,sBAAKlG,UAAWI,IAAE+F,KAAlB,UACI,cAAC,IAAD,CAASC,QALM,WACnBzE,EL8EwB,SAACqE,GAAD,MAAiB,CAAEtG,KAAM,uBAAwBsG,MK9EhEK,CAAiBL,KAIYpF,MAAO,CAAE0F,UAAW,UAAYC,GAAIvC,EAAtE,SACI,qBAAKwC,IAAKP,EAAaA,EAAWQ,UAAYC,GAASC,IAAI,4BAE/D,sBAAK3G,UAAWI,IAAEwG,YAAlB,UACI,8BAAMvE,EAAaA,EAAW,GAAK,KAClCgD,GAAS,8BAAMA,EAAMJ,OAAS,IAAMI,EAAMwB,MAAM,EAAG,KAAO,MAAQxB,IAClEa,GAAW,oCAAOA,cCjBtBY,GAAW,WACpB,IAAMnF,EAAWuC,cACXhB,EAAQmB,aAA2C,SAAAC,GAAK,OAAIA,EAAMZ,IAAIZ,SACtED,EAASwB,aAAiD,SAAAC,GAAK,OAAIA,EAAMZ,IAAIb,UAC7E9C,EAAQsE,aAA6C,SAAAC,GAAK,OAAIA,EAAMZ,IAAI3D,SAJpD,EAMQsE,aAA6C,SAAAC,GAAK,OAAIA,EAAMyC,QAAtFrE,EANkB,EAMlBA,WAAYC,EANM,EAMNA,UANM,EAOa0B,aAA6C,SAAAC,GAAK,OAAIA,EAAMZ,IAAIV,aAA/FO,EAPkB,EAOlBA,OAAQlB,EAPU,EAOVA,WAAYC,EAPF,EAOEA,OAW5B,OAJGvC,IACCmF,MAAMnF,GACN4B,EAASC,EAAc,MAGvB,qBAAK5B,UAAWI,IAAEqE,KAAlB,SACgB,YAAX5B,GAAyBK,EAAM+B,OAK5B,qCACKvC,GACG,sBAAK1C,UAAWI,IAAE4G,MAAlB,mBAAgCtE,GAAcA,EAA9C,cAEJ,qBAAK1C,UAAWI,IAAE6G,SAAlB,SACK/D,GACGA,EAAM5B,KAAI,SAAAyE,GAAI,OACV,cAACD,GAAD,CAAoBE,GAAID,EAAKC,GAAID,KAAMA,EAAKmB,YAAjCnB,EAAKC,SAG3BtD,GACG,cAAC,EAAD,CAAQ+C,SAAqB,YAAX5C,EAAsB7C,UAAWI,IAAEsF,IAAKU,QA3B7D,WACbzE,EAAS2B,EAAaC,EAAQlB,EAAYC,EAAQK,IAClDhB,EPK0C,CAAEjC,KAAM,sBAAuB6C,MOLjD,MAyBR,uBAIQ,YAAXM,GACG,qBAAK7C,UAAWI,IAAE+G,SAAlB,SACI,cAACvB,EAAD,SArBZ,qBAAKhF,MAAO,CAAEwG,UAAW,QAAzB,SACI,cAACxB,EAAD,S,oBCzBPyB,GAAW,WACpB,IAAMlB,EAAO9B,aAA2C,SAAAC,GAAK,OAAIA,EAAMZ,IAAIX,eAC3E,OACI,8BACKoD,GACGA,EAAK7E,KAAI,SAAAyE,GACL,IAAIrF,EAAQqF,EAAKmB,WACjB,OACI,qBAAmBlH,UAAWI,KAAEqE,KAAhC,SACI,sBAAKzE,UAAWI,KAAE+F,KAAlB,UACI,qBAAKnG,UAAWI,KAAEkH,IAAlB,SACI,qBAAKd,IAAK9F,EAAMuF,WAAavF,EAAMuF,WAAWQ,UAAYC,GAASC,IAAI,4BAG3E,sBAAK3G,UAAWI,KAAEwG,YAAlB,UACKlG,EAAM2B,YAAc,8BAAM3B,EAAM2B,aACjC,8BAAM3B,EAAM2E,QACZ,oCAAO3E,EAAMwF,WACZxF,EAAMkG,aAAe,oCAAOlG,EAAMkG,sBAVrCb,EAAKC,UCMxBuB,OAbf,WACI,OACI,sBAAKvH,UAAWI,IAAEoH,UAAlB,UACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,KAAMC,QAAS,cAAC,GAAD,MAC5B,cAAC,IAAD,CAAOD,KAAMzD,EAAiB0D,QAAS,cAAC,GAAD,MACvC,cAAC,IAAD,CAAOD,KAAMzD,EAAiB0D,QAAS,cAAC,GAAD,a,kBCVjDC,GAAcC,aAAgB,CAChClE,IToDsB,WAAsF,IAArFY,EAAoF,uDAA9D7B,EAAcoF,EAAgD,uCAC3G,OAAQA,EAAOnI,MACX,IAAK,gBACD,IAAMoI,EAAQ,YAAOxD,EAAMxB,OACrBiF,EAAQ,YAAOF,EAAO3E,OAEtB8E,EAASF,EAASxG,KAAI,SAAAE,GAAC,OAAIA,EAAEwE,MAE7BiC,EAAiBF,EAASG,QAAO,SAAA1G,GAAC,OAAKwG,EAAOG,SAAS3G,EAAEwE,OAC/D,OAAO,2BAAK1B,GAAZ,IAAmBxB,MAAM,GAAD,mBAAMgF,GAAN,YAAkBG,MAC9C,IAAK,oBACD,OAAO,2BAAK3D,GAAZ,IAAmBxB,MAAO+E,EAAO3E,QACrC,IAAK,iBACD,OAAO,2BAAKoB,GAAZ,IAAmBzB,OAAQgF,EAAOhF,SACtC,IAAK,qBACD,OAAO,2BAAKyB,GAAZ,IAAmBtB,UAAW6E,EAAOxE,OACzC,IAAK,gBACD,OAAO,2BAAKiB,GAAZ,IAAmBvE,MAAO8H,EAAO9H,QACrC,IAAK,uBACD,OAAO,2BAAKuE,GAAZ,IAAmBvB,YAAauB,EAAMxB,MAAMoF,QAAO,SAAA1G,GAAC,OAAIA,EAAEwE,KAAO6B,EAAO7B,QAC5E,QACI,OAAO1B,ISxEfyC,KVIuB,WAA2F,IAA1FzC,EAAyF,uDAAlE7B,EAAcoF,EAAoD,uCACjH,OAAQA,EAAOnI,MACX,IAAK,uBACD,OAAO,2BAAK4E,GAAZ,IAAmB5B,WAAYmF,EAAOnF,aAC1C,IAAK,sBACD,OAAO,2BAAK4B,GAAZ,IAAmB3B,UAAY2B,EAAM3B,WAAakF,EAAOtF,QAC7D,QACI,OAAO+B,MURN8D,GAAQC,aAAYV,GAAaW,aAAgBC,OAM9DC,OAAOJ,MAAQA,GCRfK,IAASC,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRO,SAASC,eAAe,U,kBCb5BvJ,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,+BAA+B,MAAQ,0BAA0B,IAAM,wBAAwB,YAAc,mC","file":"static/js/main.8a1ac81a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"BookList_wrap__1LGE6\",\"loadWrap\":\"BookList_loadWrap__2R5nf\",\"count\":\"BookList_count__2J4h0\",\"bookList\":\"BookList_bookList__245dp\",\"btn\":\"BookList_btn__1T6ea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Input_default__3LvGH\",\"errorInput\":\"Input_errorInput__OSSXa\",\"error\":\"Input_error__qo1QA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"BookCard_wrap__cIVVU\",\"book\":\"BookCard_book__1wv7P\",\"img\":\"BookCard_img__3ZBTN\",\"description\":\"BookCard_description__CPFad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__10tZj\",\"error\":\"Button_error__KNz7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Select_default__1tC0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"book\":\"Book_book__G1VRf\",\"description\":\"Book_description__1kddn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__wkd9o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Preloader_ldsDualRing__1PPSD\"};","export default __webpack_public_path__ + \"static/media/search.66b79e13.svg\";","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react';\nimport s from './Input.module.css';\nimport searchIcon from './img/search.svg';\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\ntype InputPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void;\n    onEnter?: () => void;\n    error?: string;\n    spanClassName?: string;\n};\n\nconst Input = React.memo(({\n    type,\n    onChange,\n    onChangeText,\n    onKeyPress,\n    onEnter,\n    error,\n    className,\n    spanClassName,\n    ...restProps\n}:InputPropsType) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    };\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter && e.key === 'Enter' && onEnter();\n    };\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\n    const finalInputClassName = error\n        ? `${s.errorInput}  ${s.default} ${className ? className : ''}`\n        : `${s.default} ${className ? className : ''}`;\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                style={{ backgroundImage: `url(${searchIcon})` }}\n                {...restProps}\n            />\n            {error && <div className={finalSpanClassName}>{error}</div>}\n        </>\n    );\n});\n\nexport default Input;\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\nimport s from './Button.module.css';\n\ntype DefaultButtonPropsType = DetailedHTMLProps<\n    ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    error?: boolean;\n};\n\nconst Button = React.memo(({ error, className, ...restProps }:SuperButtonPropsType) => {\n    const finalClassName = `${error ? s.error + ' ' + s.default : s.default} ${className}`;\n\n    return <button className={finalClassName} {...restProps} />;\n});\n\nexport default Button;\n","import React, { SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent } from 'react';\nimport s from './Select.module.css';\n\ntype DefaultSelectPropsType = DetailedHTMLProps<\n    SelectHTMLAttributes<HTMLSelectElement>,\n    HTMLSelectElement\n>;\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[];\n    onChangeOption?: (option: any) => void;\n    name?: string;\n};\n\nconst Select = React.memo(({\n    options,\n    name,\n    className,\n    onChange,\n    onChangeOption,\n    ...restProps\n}:SuperSelectPropsType) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChangeOption && onChangeOption(e.currentTarget.value);\n        onChange && onChange(e);\n    };\n\n    const mappedOptions: any[] = options\n        ? options.map((a, i) => (\n              <option className={s.option} value={a} key={i + '' + a}>\n                  {a}\n              </option>\n          ))\n        : [];\n\n    const finalClassName = `${s.default} ${className}`;\n\n    return (\n        <select name={name} className={finalClassName} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n});\n\nexport default Select;\n","import { Dispatch } from 'redux';\nimport { AppActionType, setAppErrorAC, setAppStatusAC } from '../appReducer';\n\nexport const handleNetworkAppError = (error:{message:string} , dispatch: Dispatch<AppActionType>) => {\n  dispatch(setAppErrorAC(error.message ? error.message : 'Some error occurred'))\n  dispatch(setAppStatusAC('failed'))\n}\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://www.googleapis.com/books/v1/',\n});\n\nexport const API = {\n    getBooks(query:string, categories:string,sortBy:string,index:number) {\n        return instance.get(`volumes?q=${query}+${categories}&orderBy=${sortBy}&maxResults=30&startIndex=${index}&key=AIzaSyB-JHixor0WrTyBQX64mEutuCjbJoTaopY`);\n    },\n};\n","import { AppRootActionType } from './store';\n\nexport type PageStateType = {\n    totalItems: number;\n    pageIndex: number;\n};\n\nconst initialState = {\n    totalItems: 0,\n    pageIndex: 30,\n};\nexport const pageReducer = (state: PageStateType = initialState, action: AppRootActionType,): typeof initialState => {\n    switch (action.type) {\n        case 'PAGE/SET-TOTAL-ITEMS':\n            return { ...state, totalItems: action.totalItems };\n        case 'PAGE/SET-PAGE-INDEX':\n            return { ...state, pageIndex: (state.pageIndex += action.index) };\n        default:\n            return state;\n    }\n};\n\n//actions\nexport type PageActionType = ReturnType<typeof setTotalItemsAC> | ReturnType<typeof setPageIndexAC>;\n\nexport const setTotalItemsAC = (totalItems: number) => ({ type: 'PAGE/SET-TOTAL-ITEMS', totalItems } as const);\nexport const setPageIndexAC = (index: number) => ({ type: 'PAGE/SET-PAGE-INDEX', index } as const);\n","import { Dispatch } from 'redux';\nimport { handleNetworkAppError } from './utils/error-utils';\nimport { API } from '../dal/api/api';\nimport { setTotalItemsAC } from './pageReducer';\nimport { AppRootActionType, AppRootStateType } from './store';\n\nexport type VolumeInfoType = {\n    allowAnonLogging: boolean;\n    authors: string[];\n    canonicalVolumeLink: string;\n    categories: string[];\n    contentVersion: string;\n    imageLinks: {\n        smallThumbnail: string;\n        thumbnail: string;\n    };\n    industryIdentifiers: [];\n    infoLink: string;\n    language: string;\n    maturityRating: string;\n    pageCount: number;\n    panelizationSummary: {\n        containsEpubBubbles: false;\n        containsImageBubbles: false;\n    };\n    previewLink: string;\n    printType: string;\n    publishedDate: string;\n    readingModes: string;\n    title: string;\n    description: string;\n};\nexport type ItemsType = {\n    volumeInfo: VolumeInfoType;\n    id: string;\n};\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed';\nexport type QueryTermType = {\n    search: string;\n    categories: string;\n    sortBy: string;\n};\ntype AppStateType = {\n    items: ItemsType[];\n    status: RequestStatusType;\n    error: string | null;\n    currentBook: ItemsType[];\n    queryTerm: QueryTermType;\n};\n\nconst initialState = {\n    status: 'idle' as RequestStatusType,\n    items: [] as ItemsType[],\n    error: null as null | string,\n    currentBook: [] as ItemsType[],\n    queryTerm: {} as QueryTermType,\n};\n\nexport const appReducer = (state: AppStateType = initialState, action: AppActionType,): typeof initialState => {\n    switch (action.type) {\n        case 'APP/SET-BOOKS':\n            const oldState = [...state.items]\n            const newState = [...action.books]\n\n            const idList = oldState.map(i => i.id)\n\n            const uniqueNewState = newState.filter(i => !idList.includes(i.id));\n            return { ...state, items: [...oldState,...uniqueNewState] };\n        case 'APP/SET-NEW-BOOKS':\n            return { ...state, items: action.books};\n        case 'APP/SET-STATUS':\n            return { ...state, status: action.status };\n        case 'APP/SET-QUERY-TERM':\n            return { ...state, queryTerm: action.term };\n        case 'APP/SET-ERROR':\n            return { ...state, error: action.error };\n        case 'APP/SET-CURRENT-BOOK':\n            return { ...state, currentBook: state.items.filter(i => i.id === action.id) };\n        default:\n            return state;\n    }\n};\n\n//actions\nexport type AppActionType =\n    | ReturnType<typeof setBooksAC>\n    | ReturnType<typeof setAppStatusAC>\n    | ReturnType<typeof setAppErrorAC>\n    | ReturnType<typeof setAppStatusAC>\n    | ReturnType<typeof setCurrentBookAC>\n    | ReturnType<typeof setNewBooksAC>\n    | ReturnType<typeof setQueryTermAC>;\n\nexport const setBooksAC = (books: ItemsType[]) => ({ type: 'APP/SET-BOOKS', books } as const);\nexport const setNewBooksAC = (books: ItemsType[]) => ({ type: 'APP/SET-NEW-BOOKS', books } as const);\nexport const setCurrentBookAC = (id: string) => ({ type: 'APP/SET-CURRENT-BOOK', id } as const);\nexport const setAppStatusAC = (status: RequestStatusType) => ({ type: 'APP/SET-STATUS', status } as const);\nexport const setAppErrorAC = (error: string | null) => ({ type: 'APP/SET-ERROR', error } as const);\nexport const setQueryTermAC = (term: QueryTermType) => ({ type: 'APP/SET-QUERY-TERM', term } as const);\n\n//thunk\nexport const fetchBooksTC =\n    (search: string, categories: string, sortBy: string, index: number = 0) =>\n    async (dispatch: Dispatch<AppRootActionType>, getState: () => AppRootStateType) => {\n\n        let prevSearch = getState().app.queryTerm.search;\n        let prevCategories = getState().app.queryTerm.categories;\n        let prevSortBy = getState().app.queryTerm.sortBy;\n\n        dispatch(setAppStatusAC('loading'));\n        dispatch(setQueryTermAC({ search, categories, sortBy }));\n\n        try {\n            const res = await API.getBooks(search, categories, sortBy, index);\n            if (res.status === 200) {\n                dispatch(setTotalItemsAC(res.data.totalItems));\n\n                if (prevSearch === search && prevCategories === categories && prevSortBy === sortBy) {\n                    dispatch(setBooksAC(res.data.items));\n                } else {\n                    dispatch(setNewBooksAC(res.data.items));\n                }\n                dispatch(setAppStatusAC('succeeded'));\n            } else {\n                handleNetworkAppError({ message: res.statusText }, dispatch);\n                dispatch(setAppStatusAC('failed'));\n            }\n        } catch (error) {\n            handleNetworkAppError(error as Error, dispatch);\n            dispatch(setAppStatusAC('failed'));\n        }\n    };\n","\nexport const routes = {\n    bookList: \"/\",\n    bookCard: \"/book-card\"\n}\n","import Input from '../common/input/Input';\nimport s from './SearchForm.module.scss';\nimport Button from '../common/button/Button';\nimport Select from '../common/select/Select';\nimport React, { useRef } from 'react';\nimport { fetchBooksTC, RequestStatusType } from '../../bll/appReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppRootStateType } from '../../bll/store';\nimport { useNavigate } from 'react-router-dom';\nimport { routes } from '../router/routes';\n\ninterface FormElements extends HTMLFormControlsCollection {\n    search: HTMLInputElement;\n    categories: HTMLInputElement;\n    sortBy: HTMLInputElement;\n}\n\ninterface FormPropsElement extends HTMLFormElement {\n    readonly elements: FormElements;\n}\n\nexport const SearchForm = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status);\n    const formRef = useRef<HTMLFormElement>(null);\n\n    const handleSubmit = (e: React.FormEvent<FormPropsElement>) => {\n        e.preventDefault();\n\n        let search = e.currentTarget.elements.search.value;\n        let categories = e.currentTarget.elements.categories.value;\n        let sortBy = e.currentTarget.elements.sortBy.value;\n\n        if (search.trim() === '' || search.length > 20) {\n            alert('Input should be more than 1 character and less then 20');\n            formRef.current && formRef.current.reset();\n        }\n\n        dispatch(fetchBooksTC(search, categories, sortBy));\n\n        navigate(routes.bookList);\n    };\n    const categories = ['all', 'art', 'biography', 'computers', 'history', 'medical', 'poetry'];\n    const sortBy = ['relevance', 'newest'];\n\n    return (\n        <div className={s.wrap}>\n            <div className={s.bcgImage} />\n            <form ref={formRef} className={s.form} onSubmit={handleSubmit}>\n                <span className={s.title}> Online library</span>\n                <div className={s.inputGroup}>\n                    <Input placeholder=\"Search\" name=\"search\" className={s.input} />\n                    <Button type={'submit'} disabled={status === 'loading'} className={s.btn}>\n                        search\n                    </Button>\n                </div>\n\n                <div className={s.selectGroup}>\n                    <div>\n                        <span>Categories</span>\n                        <Select options={categories} name=\"categories\" />\n                    </div>\n                    <div>\n                        <span>Sorting by</span>\n                        <Select options={sortBy} name=\"sortBy\" />\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n","import s from \"./Preloader.module.css\";\r\nimport React from \"react\";\r\n\r\nexport const Preloader = React.memo(() => {\r\n    return <div className={s.ldsDualRing}/>\r\n})\r\n","export default __webpack_public_path__ + \"static/media/book.41aa1e89.png\";","import { setCurrentBookAC, VolumeInfoType } from '../../../bll/appReducer';\nimport { routes } from '../../router/routes';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport s from './Book.module.scss';\nimport bookImg from '../../../common/assets/img/book.png';\nimport React from 'react';\n\ntype BookPropsType = {\n    item: VolumeInfoType;\n    id: string;\n};\nexport const Book = React.memo(({ item, id }: BookPropsType) => {\n    const dispatch = useDispatch();\n    const { imageLinks, title, categories, authors } = item;\n\n    const onClickHandler = () => {\n        dispatch(setCurrentBookAC(id));\n    };\n    return (\n        <div className={s.book}>\n            <NavLink onClick={onClickHandler} style={{ alignSelf: 'center' }} to={routes.bookCard}>\n                <img src={imageLinks ? imageLinks.thumbnail : bookImg} alt='image has been losted'/>\n            </NavLink>\n            <div className={s.description}>\n                <div>{categories ? categories[0] : ''}</div>\n                {title && <div>{title.length > 100 ? title.slice(0, 100) + '...' : title}</div>}\n                {authors && <div> {authors}</div>}\n            </div>\n        </div>\n    );\n})\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppRootStateType } from '../../bll/store';\nimport { fetchBooksTC, ItemsType, QueryTermType, RequestStatusType, setAppErrorAC } from '../../bll/appReducer';\nimport s from './BookList.module.scss';\nimport { Preloader } from '../common/preloader/Preloader';\nimport { Book } from './book/Book';\nimport { PageStateType, setPageIndexAC } from '../../bll/pageReducer';\nimport Button from '../common/button/Button';\n\nexport const BookList = () => {\n    const dispatch = useDispatch();\n    const books = useSelector<AppRootStateType, ItemsType[]>(state => state.app.items);\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status);\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\n\n    const { totalItems, pageIndex } = useSelector<AppRootStateType, PageStateType>(state => state.page);\n    const { search, categories, sortBy } = useSelector<AppRootStateType, QueryTermType>(state => state.app.queryTerm,);\n\n    const loadMore = () => {\n        dispatch(fetchBooksTC(search, categories, sortBy, pageIndex));\n        dispatch(setPageIndexAC(30));\n    };\n\n    if(error){\n        alert(error)\n        dispatch(setAppErrorAC(''))\n    }\n    return (\n        <div className={s.wrap}>\n            {status === 'loading' && !books.length ? (\n                <div style={{ marginTop: '10vh' }}>\n                    <Preloader />\n                </div>\n            ) : (\n                <>\n                    {totalItems && (\n                        <div className={s.count}>Found {totalItems && totalItems} results</div>\n                    )}\n                    <div className={s.bookList}>\n                        {books &&\n                            books.map(item => (\n                                <Book key={item.id} id={item.id} item={item.volumeInfo} />\n                            ))}\n                    </div>\n                    {totalItems && (\n                        <Button disabled={status === 'loading'} className={s.btn} onClick={loadMore}>\n                            Load more\n                        </Button>\n                    )}\n                    {status === 'loading' && (\n                        <div className={s.loadWrap}>\n                            <Preloader />\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n","import { useSelector } from 'react-redux';\nimport { AppRootStateType } from '../../bll/store';\nimport { ItemsType } from '../../bll/appReducer';\nimport s from './BookCard.module.scss';\nimport React from 'react';\nimport bookImg from '../../common/assets/img/book.png';\n\nexport const BookCard = () => {\n    const book = useSelector<AppRootStateType, ItemsType[]>(state => state.app.currentBook);\n    return (\n        <div>\n            {book &&\n                book.map(item => {\n                    let value = item.volumeInfo;\n                    return (\n                        <div key={item.id} className={s.wrap}>\n                            <div className={s.book}>\n                                <div className={s.img}>\n                                    <img src={value.imageLinks ? value.imageLinks.thumbnail : bookImg} alt='image has been losted' />\n                                </div>\n\n                                <div className={s.description}>\n                                    {value.categories && <div>{value.categories}</div>}\n                                    <div>{value.title}</div>\n                                    <div> {value.authors}</div>\n                                    {value.description && <div> {value.description}</div>}\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n        </div>\n    );\n};\n","import React from 'react';\nimport s from './App.module.scss';\nimport { SearchForm } from './ui/search-form/SearchForm';\nimport { routes } from './ui/router/routes';\nimport { Route, Routes } from 'react-router-dom';\nimport { BookList } from './ui/book-list/BookList';\nimport { BookCard } from './ui/book-card/BookCard';\n\nfunction App() {\n    return (\n        <div className={s.container}>\n            <SearchForm />\n            <Routes>\n                <Route path={'/*'} element={<BookList />} />\n                <Route path={routes.bookList} element={<BookList />} />\n                <Route path={routes.bookCard} element={<BookCard />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { AppActionType, appReducer } from './appReducer';\nimport { PageActionType, pageReducer } from './pageReducer';\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    page: pageReducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\nexport type AppRootActionType = PageActionType | AppActionType;\n\n// @ts-ignore\nwindow.store = store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './bll/store';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"SearchForm_wrap__1-Zhq\",\"bcgImage\":\"SearchForm_bcgImage__2yTIM\",\"form\":\"SearchForm_form__3S8V5\",\"title\":\"SearchForm_title__28S27\",\"inputGroup\":\"SearchForm_inputGroup__wHgTY\",\"input\":\"SearchForm_input__5EQqv\",\"btn\":\"SearchForm_btn__vkoJi\",\"selectGroup\":\"SearchForm_selectGroup__Az_nr\"};"],"sourceRoot":""}